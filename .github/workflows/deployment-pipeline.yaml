# name: deployment-pipeline

# on:
#   push:
#     branches:
#       - master
#     paths:
#       - 'deploy/infra/**'
      
# jobs:
#   build-and-deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2

#       - name: Login to Google Cloud
#         env:
#           GCP_KEY: ${{ secrets.GCP_KEY }}
#         run: |
#           echo $GCP_KEY | cat > ./key.json
#           cat ./key.json | docker login -u _json_key --password-stdin asia-northeast3-docker.pkg.dev

#       - name: Check if Docker image exists
#         id: check_image
#         run: |
#           IMAGE_TAG=$(git rev-parse --short HEAD) # 빌드에 고유한 태그 생성
#           if docker manifest inspect asia-northeast3-docker.pkg.dev/cheorish/docker/model-create:$IMAGE_TAG > /dev/null; then
#             echo "Image already exists. Skipping build and push."
#             echo "::set-output name=skip_build::true"
#           else
#             echo "::set-output name=skip_build::false"
#           fi

#       - name: Build and push Docker image
#         if: steps.check_image.outputs.skip_build != 'true' # 이미지가 없는 경우에만 빌드 및 푸시
#         working-directory: ./infra/model-create
#         run: |
#           docker build . -t asia-northeast3-docker.pkg.dev/cheorish/docker/model-create:$(git rev-parse --short HEAD)
#           docker push asia-northeast3-docker.pkg.dev/cheorish/docker/model-create:$(git rev-parse --short HEAD)
#       - name: gcloud with apply yaml 
#         run: |
#             gcloud 
